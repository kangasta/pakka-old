{"version":3,"sources":["DeckUtils.js","CardUtils.js","Card.js","Deck.js","App.js","registerServiceWorker.js","index.js"],"names":["DeckUtils","n","cards","num_decks","this","resetDeck","createDeck","shuffleDeck","isUnshuffled","pop","length","deck","i","j","Math","floor","random","push","reduce","a","b","CardUtils","ace_is_face_card","ten_is_face_card","num_i","ten_as_10","nums","ascii","suit_i","round","suit_letters","suits","toSuitLetter","toNumLetter","suit_names","card_sizes","Card","props","number","CARD_HIDDEN","CARD_EMPTY","CARD_SHADOW","indexOf","size","toSuitName","fourcolor","getVisibilityStyle","isFaceCard","className","getClasses","onClick","onClickCallback","map","key","Component","defaultProps","Deck","is_shadow","num_cards","top_card","Array","fill","cur","style","zIndex","left","top","position","transform","getTranslate","transition","getCardNumber","App","has_separate_deck","state","bind","updateCard","setState","cardsLeft","card_number","drawCard","window","scrollTo","cards_left","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.4f792844.chunk.js","sourcesContent":["class DeckUtils {\n\tcards = [];\n\tnum_decks = 0;\n\n\tconstructor(n=1) {\n\t\tthis.num_decks = n;\n\t\tthis.resetDeck();\n\t}\n\n\tresetDeck() {\n\t\tthis.cards = DeckUtils.createDeck(this.num_decks);\n\t\tDeckUtils.shuffleDeck(this.cards);\n\t}\n\n\tisShuffled() {\n\t\treturn !DeckUtils.isUnshuffled(this.cards);\n\t}\n\n\tdrawCard() {\n\t\treturn this.cards.pop();\n\t}\n\n\tcardsLeft() {\n\t\treturn this.cards.length;\n\t}\n\n\t// https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array\n\tstatic shuffleDeck(deck) {\n\t\tfor (let i = deck.length - 1; i > 0; i--) {\n\t\t\tconst j = Math.floor(Math.random() * (i + 1));\n\t\t\t[deck[i], deck[j]] = [deck[j], deck[i]];\n\t\t}\n\t}\n\n\tstatic createDeck(n=1) {\n\t\tvar cards = [];\n\t\tfor (var i = 0; i < n*52; i++) {\n\t\t\tcards.push(i);\n\t\t}\n\t\treturn cards;\n\t}\n\n\tstatic isUnshuffled(deck) {\n\t\treturn !!deck.reduce((a,b)=>{\n\t\t\treturn (b === (a + 1)) ? b : 0;\n\t\t});\n\t}\n}\n\nexport default DeckUtils;\n","class CardUtils {\n\tstatic suits = ['♠','♣','♥','♦'];\n\tstatic suit_letters = ['s','c','h','d'];\n\tstatic suit_names = ['spade','club','heart','diamond'];\n\tstatic nums = ['A','2','3','4','5','6','7','8','9','T','J','Q','K'];\n\tstatic card_sizes = ['bridge', 'poker'];\n\n\tstatic isFaceCard(i, ace_is_face_card=false, ten_is_face_card=false) {\n\t\tvar num_i = i % 13;\n\t\treturn num_i > 9 ||\n\t\t\t(ace_is_face_card && num_i === 0) ||\n\t\t\t(ten_is_face_card && num_i === 9);\n\t}\n\n\tstatic toNumLetter(i, ten_as_10=true) {\n\t\tvar num_i = i % 13;\n\t\treturn ten_as_10 && num_i === 9 ? '10' : CardUtils.nums[num_i];\n\t}\n\n\tstatic toSuitLetter(i, ascii=false) {\n\t\tvar suit_i = Math.round(i / 13 - 0.5);\n\t\treturn !ascii ? CardUtils.suits[suit_i] : CardUtils.suit_letters[suit_i];\n\t}\n\n\tstatic toCardString(i, ascii=false, ten_as_10=true) {\n\t\treturn CardUtils.toSuitLetter(i, ascii) + CardUtils.toNumLetter(i, ten_as_10);\n\t}\n\n\tstatic toSuitName(i) {\n\t\treturn CardUtils.suit_names[Math.round(i / 13 - 0.5)];\n\t}\n}\n\nexport default CardUtils;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport CardUtils from './CardUtils';\n\nimport './Card.css';\n\nclass Card extends Component {\n\tstatic CARD_HIDDEN = -1;\n\tstatic CARD_EMPTY = -2;\n\tstatic CARD_SHADOW = -3;\n\n\tgetVisibilityStyle() {\n\t\tswitch (this.props.number) {\n\t\tcase Card.CARD_HIDDEN:\n\t\t\treturn 'hidden';\n\t\tcase Card.CARD_EMPTY:\n\t\t\treturn 'empty';\n\t\tcase Card.CARD_SHADOW:\n\t\t\treturn 'shadow';\n\t\tdefault:\n\t\t\treturn 'visible';\n\t\t}\n\t}\n\n\tgetClasses() {\n\t\treturn (\n\t\t\t' card-size-' + (CardUtils.card_sizes.indexOf(this.props.size) !== -1 ? this.props.size : 'poker' ) +\n\t\t\t' card-suit-' + CardUtils.toSuitName(this.props.number) +\n\t\t\t' card-deck-' + (this.props.fourcolor ? 'fourcolor' : 'standard') +\n\t\t\t' card-' + this.getVisibilityStyle() +\n\t\t\t' card-style-' + (CardUtils.isFaceCard(this.props.number) ? 'face' : 'number')\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={'card' + this.getClasses()\n\t\t\t} onClick={()=>{this.props.onClickCallback();}}>\n\t\t\t\t{[\n\t\t\t\t\t'card-label-top card-label-left',\n\t\t\t\t\t'card-label-bottom card-label-right'\n\t\t\t\t].map((a,i) =>\n\t\t\t\t\t<div key={i} className={'card-label ' + a}>\n\t\t\t\t\t\t{CardUtils.toNumLetter(this.props.number)}<br/>\n\t\t\t\t\t\t{CardUtils.toSuitLetter(this.props.number)}&#xFE0E;\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t<div className='card-center'>\n\t\t\t\t\t<div className='card-center-graphics'>\n\t\t\t\t\t\t{/* TODO */}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nCard.defaultProps = {\n\tsize: 'poker',\n\tnumber: 0,\n\tfourcolor: false,\n\tonClickCallback: ()=>true\n};\n\nCard.propTypes = {\n\tsize: PropTypes.string,\n\tnumber: PropTypes.number,\n\tfourcolor: PropTypes.bool,\n\tonClickCallback: PropTypes.func\n};\n\nexport default Card;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Card from './Card.js';\n\nimport './Deck.css';\n\n\nclass Deck extends Component {\n\tgetCardNumber(is_shadow) {\n\t\treturn (\n\t\t\t(this.props.num_cards || this.props.top_card >= 0)\n\t\t\t\t? (is_shadow ? Card.CARD_SHADOW : this.props.top_card)\n\t\t\t\t: Card.CARD_EMPTY);\n\t}\n\n\tgetTranslate(i) {\n\t\treturn 'translate(' +\n\t\t\t(0.5*i/(this.props.num_decks*52)) + 'em , ' +\n\t\t\t(1.0*i/(this.props.num_decks*52)) + 'em)';\n\t}\n\n\trender() {\n\t\tconst num_elements = 20;\n\t\treturn (\n\t\t\t<div className={'deck'} onClick={() => {this.props.onClickCallback();}}>\n\t\t\t\t{\n\t\t\t\t\tArray(num_elements)\n\t\t\t\t\t\t.fill('1em')\n\t\t\t\t\t\t.map((cur, i) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div key={i}\n\t\t\t\t\t\t\t\t\tclassName='deck-element'\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tzIndex: -i,\n\t\t\t\t\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\t\t\ttransform: this.getTranslate(\n\t\t\t\t\t\t\t\t\t\t\ti/num_elements*this.props.num_cards\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\ttransition: 'transform 0.2s'\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<Card size={this.props.size}\n\t\t\t\t\t\t\t\t\t\tfourcolor={this.props.fourcolor}\n\t\t\t\t\t\t\t\t\t\tnumber={this.getCardNumber(i)} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nDeck.defaultProps = {\n\tsize: 'poker',\n\tnum_cards: 52,\n\tnum_decks: 1,\n\ttop_card: -1,\n\tfourcolor: false,\n\tonClickCallback: ()=>true\n};\n\nDeck.propTypes = {\n\tsize: PropTypes.string,\n\tnum_cards: PropTypes.number,\n\tnum_decks: PropTypes.number,\n\ttop_card: PropTypes.number,\n\tfourcolor: PropTypes.bool,\n\tonClickCallback: PropTypes.func\n};\n\nexport default Deck;\n","import React, { Component } from 'react';\nimport './App.css';\n//import Card from './Card';\nimport DeckUtils from './DeckUtils';\nimport Deck from './Deck';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.deck = new DeckUtils();\n\t\tthis.has_separate_deck = false;\n\n\t\tthis.state = {\n\t\t\t'card_number': (this.has_separate_deck ? -2 : -1),\n\t\t\t'cards_left': 52\n\t\t};\n\n\t\tthis.resetDeck = this.resetDeck.bind(this);\n\t\tthis.updateCard = this.updateCard.bind(this);\n\t}\n\n\tresetDeck() {\n\t\tthis.deck.resetDeck();\n\t\tthis.setState({'card_number': (this.has_separate_deck ? -2 : -1),'cards_left':this.deck.cardsLeft()});\n\t}\n\n\tupdateCard() {\n\t\tif ((this.state.card_number === -2 && !this.has_separate_deck) || (!this.deck.cardsLeft() && this.has_separate_deck)) {\n\t\t\tthis.resetDeck();\n\t\t\treturn;\n\t\t}\n\t\tif (!this.deck.cardsLeft()) {\n\t\t\tthis.setState({'card_number': -2,'cards_left':0});\n\t\t\treturn;\n\t\t}\n\t\tthis.setState({\n\t\t\t'card_number': this.deck.drawCard(),\n\t\t\t'cards_left':this.deck.cardsLeft()\n\t\t});\n\t}\n\n\tcomponentDidMount() {\n\t\twindow.scrollTo(0,1);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className='app'>\n\t\t\t\t<div className='app-center-container'>\n\t\t\t\t\t<div className='app-deck-container app-horizontally-center'>\n\t\t\t\t\t\t<Deck\n\t\t\t\t\t\t\tsize='poker'\n\t\t\t\t\t\t\tfourcolor={false}\n\t\t\t\t\t\t\ttop_card={this.state.card_number}\n\t\t\t\t\t\t\tnum_cards={this.state.cards_left}\n\t\t\t\t\t\t\tonClickCallback={this.updateCard}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t\t/*\n\t\t<div className='app-deck-container app-horizontally-center'>\n\t\t\t<Deck\n\t\t\t\tsize='poker' fourcolor={true}\n\t\t\t\ttop_card={this.state.card_number}\n\t\t\t\tnum_cards={this.state.cards_left}\n\t\t\t\tonClickCallback={this.updateCard}\n\t\t\t/>\n\t\t</div>\n\t\t<div className='app-card-container app-horizontally-center'>\n\t\t\t<Card size='poker' number={this.state.card_number} fourcolor={true} onClickCallback={this.updateCard}/>\n\t\t</div>\n\t\t*/\n\t}\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}